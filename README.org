* Introduction

neuroStock is a free UCI chess engine based on the excellent
Stockfish [fn:1] which is derived from Glaurung 2.1.  neuroStock is an
attempt to integrate a backpropagation neural network as an evaluation
function.

* Usage

The engine has 4 modes of play, controlled by the "Mode" UCI
parameter:

0 - original Stockfish eval is logged to files.  There has to be a
`logs' directory along the neuroStock executable.  These log files can
be processed by the neuroChessTrainer [fn:2] program to train and test
networks.  This mode can work correctly only on single thread so be
sure to specify "Threads" UCI parameter as 1.

1 - online training.  The original Stockfish eval is used to train the
network specified by the "Neural Network File" UCI parameter whose
evaluation is actually used for playing.  This mode is the slowest but
the most interesting as the engine is supposed to improve somewhat
with every move (in fact, with every thought)!  The neural network
file format can be found at [fn:2] (not fully specified network is
also allowed).  If the file is missing, new network is created and
will be freshly initialized.  Newly trained network is saved to the
same file when engine is unloaded.  For this mode a single engine
thread is also mandatory but there is additional "Training Threads"
UCI parameter which specifies number of threads within the neural
network.

2 - neural network specified by "Neural Network File" UCI parameter is
used for evaluation (again not fully specified network or missing
network file is also allowed but it will be freshly initialized and
thus playing randomly).  Multiple threads specified by the "Threads"
UCI parameter are allowed.

3 - original Stockfish playing.

* MISC

neuroStock is developed and thus far only tested on GNU/Linux.
Instructions about building from source are identical to Stockfish's.
Invoke `make help' within the source directory for details and
options.

* Disclaimer

neuroStock is an experiment (more like meta-engine) and in combination
with neuroChessTrainer[fn:2] supposed to be testing platform for
different backpropagation neural networks.  There are no expectations
for engine strength and as far as hardly trained, it plays like a
blond bimbo.


* Footnotes
[fn:1] http://www.stockfishchess.com
[fn:2] https://github.com/m00natic/neuroChessTrainer
